'''
modified from hee: https://github.com/tburrows13/moviepy/blob/redo-textclip/moviepy/video/NewTextClip.py
'''
import numpy as np
from moviepy.decorators import convert_path_to_string
from moviepy.video.VideoClip import ImageClip
from PIL import Image, ImageDraw, ImageFont


class TextClip(ImageClip):
    """Class for autogenerated text clips.

    Creates an ImageClip originating from a script-generated text image.
    Requires ImageMagick.

    Parameters
    -----------

    text
      A string of the text to write. 

    size
      Size of the picture in pixels. Can be auto-set if
      method='label', but mandatory if method='caption'.
      the height can be None, it will then be auto-determined.

    bg_color
      Color of the background. See ``TextClip.list('color')``
      for a list of acceptable names.

    color
      Color of the text. See ``TextClip.list('color')`` for a
      list of acceptable names.

    font
      Name of the font to use. See ``TextClip.list('font')`` for
      the list of fonts you can use on your computer.

    stroke_color
      Color of the stroke (=contour line) of the text. If ``None``,
      there will be no stroke.

    stroke_width
      Width of the stroke, in pixels. Can be a float, like 1.5.

    transparent
      ``True`` (default) if you want to take into account the
      transparency in the image.

    """

    @convert_path_to_string("filename")
    def __init__(
        self,
        text="hello",
        size=None,
        color="black",
        bg_color="transparent",
        fontsize=None,
        font=None,
        font_index=None,
        stroke_color=None,
        stroke_width=1,
        text_position=(10, 10),
        spacing=4,
        margin=0,
        justify="center",
        transparent=True,
    ):
        pil_font = ImageFont.truetype(font, fontsize)

        # Create a temporary image to get the size of the rendered text
        bg_image = Image.new("RGB", (1, 1), color=(0, 0, 0))
        draw = ImageDraw.Draw(bg_image)
        text_size = draw.textsize(
            text, font=pil_font, stroke_width=stroke_width, spacing=spacing
        )

        size = size or text_size

        bg_image = Image.new('RGBA', size, color=(0, 0, 0, 255))
        draw = ImageDraw.Draw(bg_image)

        draw.text(
            text_position,
            text,
            font=pil_font,
            fill=color,
            stroke_width=stroke_width,
            stroke_fill=stroke_color,
            align=justify,
            spacing=spacing,
        )

        ImageClip.__init__(self, np.array(bg_image), transparent=transparent)
        self.text = text
        self.color = color